DEBUG: log will be stored in debug.log
+ echo 'DEBUG: log will be stored in debug.log'
+ shift 1
+ true
+ case "$1" in
+ '[' -n 10.220.29.220 ']'
+ deviceip=10.220.29.220
+ connect_adb
+ /opt/android-sdk-linux/platform-tools/adb connect 10.220.29.220
connected to 10.220.29.220:5555
+ connected=1
+ sleep 3
$adb_bin devices | grep -w $deviceip | grep -w "device" | awk '{print $1}'
++ /opt/android-sdk-linux/platform-tools/adb devices
++ grep -w 10.220.29.220
++ grep -w device
++ awk '{print $1}'
+ adb_id=10.220.29.220:5555
+ adb_bin='/opt/android-sdk-linux/platform-tools/adb -s 10.220.29.220:5555'
+ shift 2
+ true
+ case "$1" in
+ '[' -n org.chromium.youtube_apk ']'
+ package=org.chromium.youtube_apk
+ start_app
+ send_keyevent KEYCODE_WAKEUP
+ for var in '"$@"'
+ case "$var" in
+ '[' -v longpress ']'
+ /opt/android-sdk-linux/platform-tools/adb -s 10.220.29.220:5555 shell input keyevent KEYCODE_WAKEUP
$adb_bin shell pm dump $package | grep -A 1 "MAIN" | grep $package | awk '{print $2}' | grep $package
++ /opt/android-sdk-linux/platform-tools/adb -s 10.220.29.220:5555 shell pm dump org.chromium.youtube_apk
++ grep -A 1 MAIN
++ awk '{print $2}'
++ grep org.chromium.youtube_apk
++ grep org.chromium.youtube_apk
+ packageIntent=$'org.chromium.youtube_apk/.YouTubeActivity\r'
+ /opt/android-sdk-linux/platform-tools/adb -s 10.220.29.220:5555 shell am start -n org.chromium.youtube_apk/.YouTubeActivity
Starting: Intent { cmp=org.chromium.youtube_apk/.YouTubeActivity }
Warning: Activity not started, its current task has been brought to the front
+ shift 2
+ true
+ case "$1" in
+ shift
+ break

if [ ! -v maintain ]; then
    disconnect_adb
fi
+ '[' '!' -v maintain ']'
+ disconnect_adb
+ '[' -v connected ']'
+ /opt/android-sdk-linux/platform-tools/adb -s 10.220.29.220:5555 disconnect 10.220.29.220
disconnected 10.220.29.220
